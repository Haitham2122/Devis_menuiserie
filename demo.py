#!/usr/bin/env python3
"""
Script de d√©monstration pour le Modificateur de Devis PDF
"""

import os
import time
from pdf_modifier import PDFModifier
from config import MODIFICATIONS, COLORS, TEXTS_TO_ADD

def demo_pdf_modifications():
    """D√©monstration des diff√©rentes modifications possibles"""
    
    print("üé¨ D√©monstration du Modificateur de Devis PDF")
    print("=" * 50)
    
    # Cr√©er le modificateur
    modifier = PDFModifier()
    
    # Cr√©er les r√©pertoires n√©cessaires
    os.makedirs("static", exist_ok=True)
    os.makedirs("output", exist_ok=True)
    
    # 1. Cr√©er un PDF d'exemple
    sample_pdf = "static/demo_devis.pdf"
    print("üìÑ Cr√©ation d'un PDF d'exemple...")
    if modifier.create_sample_pdf(sample_pdf):
        print(f"‚úÖ PDF d'exemple cr√©√©: {sample_pdf}")
    else:
        print("‚ùå Erreur lors de la cr√©ation du PDF d'exemple")
        return
    
    # 2. D√©monstration des diff√©rentes configurations
    demos = [
        {
            'name': 'Modification Standard',
            'output': 'output/demo_standard.pdf',
            'config': None  # Configuration par d√©faut
        },
        {
            'name': 'Suppression de logos uniquement',
            'output': 'output/demo_logos_only.pdf',
            'config': {
                'modifications': {
                    'remove_logo': True,
                    'change_colors': False,
                    'add_text': False,
                    'add_watermark': False
                }
            }
        },
        {
            'name': 'Couleurs personnalis√©es',
            'output': 'output/demo_colors.pdf',
            'config': {
                'modifications': {
                    'remove_logo': False,
                    'change_colors': True,
                    'add_text': False,
                    'add_watermark': False
                },
                'colors': {
                    'primary': COLORS['accent'],  # Rouge-orange
                    'secondary': COLORS['primary'],  # Bleu
                }
            }
        },
        {
            'name': 'Texte personnalis√©',
            'output': 'output/demo_text.pdf',
            'config': {
                'modifications': {
                    'remove_logo': False,
                    'change_colors': False,
                    'add_text': True,
                    'add_watermark': False
                },
                'texts_to_add': [
                    {
                        'text': 'DEVIS PERSONNALIS√â',
                        'position': (100, 700),
                        'font_size': 16,
                        'color': COLORS['accent'],
                        'font': 'Helvetica-Bold'
                    },
                    {
                        'text': 'Offre sp√©ciale - Remise 10%',
                        'position': (100, 680),
                        'font_size': 12,
                        'color': COLORS['secondary'],
                        'font': 'Helvetica-Oblique'
                    }
                ]
            }
        },
        {
            'name': 'Modification compl√®te',
            'output': 'output/demo_complete.pdf',
            'config': {
                'modifications': {
                    'remove_logo': True,
                    'change_colors': True,
                    'add_text': True,
                    'add_watermark': True
                }
            }
        }
    ]
    
    print(f"\nüîß D√©monstration de {len(demos)} configurations diff√©rentes:")
    print("-" * 50)
    
    for i, demo in enumerate(demos, 1):
        print(f"\n{i}. {demo['name']}")
        
        # Cr√©er un nouveau modificateur avec la configuration sp√©cifique
        demo_modifier = PDFModifier(demo['config'])
        
        # Appliquer les modifications
        success = demo_modifier.modify_pdf(sample_pdf, demo['output'])
        
        if success:
            print(f"   ‚úÖ Cr√©√©: {demo['output']}")
            
            # Afficher les informations du PDF
            info = demo_modifier.get_pdf_info(demo['output'])
            print(f"   üìä Pages: {info.get('num_pages', 'N/A')}")
        else:
            print(f"   ‚ùå Erreur lors de la cr√©ation de {demo['output']}")
    
    print(f"\nüìÅ Tous les fichiers de d√©monstration sont dans le dossier 'output/'")
    print("üåê Vous pouvez maintenant d√©marrer l'application web avec: python start.py")

def show_configuration():
    """Affiche la configuration actuelle"""
    
    print("\n‚öôÔ∏è  Configuration actuelle:")
    print("-" * 30)
    
    print("üîß Modifications activ√©es:")
    for key, value in MODIFICATIONS.items():
        status = "‚úÖ" if value else "‚ùå"
        print(f"   {status} {key}")
    
    print(f"\nüé® Couleurs configur√©es: {len(COLORS)} couleurs")
    print(f"üìù Textes √† ajouter: {len(TEXTS_TO_ADD)} textes")
    
    print("\nüí° Pour personnaliser, modifiez le fichier 'config.py'")

def main():
    """Fonction principale de d√©monstration"""
    
    # Afficher la configuration
    show_configuration()
    
    # Lancer la d√©monstration
    demo_pdf_modifications()
    
    print("\n" + "=" * 50)
    print("üéâ D√©monstration termin√©e!")
    print("\nüìñ Prochaines √©tapes:")
    print("   1. Examinez les fichiers PDF cr√©√©s dans 'output/'")
    print("   2. Modifiez 'config.py' selon vos besoins")
    print("   3. D√©marrez l'application: python start.py")
    print("   4. Testez avec vos propres PDF!")

if __name__ == "__main__":
    main() 