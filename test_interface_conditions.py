import requests

def test_interface_conditions():
    """Test sp√©cialis√© pour v√©rifier l'affichage des messages conditions g√©n√©rales"""
    print("üåê Test de l'interface avec conditions g√©n√©rales...")
    
    base_url = "http://localhost:8000"
    
    try:
        # Tester la page principale
        response = requests.get(f"{base_url}/")
        if response.status_code == 200:
            content = response.text
            
            # V√©rifier les messages sp√©cifiques aux conditions g√©n√©rales
            checks = [
                ("Logo automatique", "Message logo trouv√©"),
                ("Conditions g√©n√©rales", "Message conditions g√©n√©rales trouv√©"),
                ("file-contract", "Ic√¥ne conditions g√©n√©rales trouv√©e"),
                ("automatiquement ajout√©es", "Texte explicatif trouv√©"),
                ("text-success", "Style de succ√®s appliqu√©"),
                ("border-left border-success", "Bordure verte trouv√©e")
            ]
            
            all_good = True
            for check, description in checks:
                if check in content:
                    print(f"   ‚úÖ {description}")
                else:
                    print(f"   ‚ùå {description} manquant")
                    all_good = False
            
            # V√©rifier que l'interface est compl√®te
            essential_checks = [
                ("devis_complet", "Nom de fichier mis √† jour"),
                ("Fen√™tre sur le Monde", "Nom de l'entreprise"),
                ("bootstrap", "Framework CSS"),
                ("generer-devis", "Endpoint de g√©n√©ration")
            ]
            
            for check, description in essential_checks:
                if check in content:
                    print(f"   ‚úÖ {description}")
                else:
                    print(f"   ‚ö†Ô∏è {description} non d√©tect√©")
            
            return all_good
            
        else:
            print(f"‚ùå Erreur HTTP {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur lors du test: {e}")
        return False

def test_gestion_societes_interface():
    """Test de l'interface de gestion des soci√©t√©s"""
    print("\nüè¢ Test de l'interface gestion soci√©t√©s...")
    
    base_url = "http://localhost:8000"
    
    try:
        response = requests.get(f"{base_url}/societes")
        if response.status_code == 200:
            content = response.text
            
            checks = [
                ("Date Attribution RGE", "Champ date attribution"),
                ("Date Validit√©", "Champ date validit√©"),
                ("input type=\"date\"", "Champs de type date"),
                ("editDateAttribution", "ID champ √©dition attribution"),
                ("editDateValidite", "ID champ √©dition validit√©")
            ]
            
            all_good = True
            for check, description in checks:
                if check in content:
                    print(f"   ‚úÖ {description}")
                else:
                    print(f"   ‚ùå {description} manquant")
                    all_good = False
            
            return all_good
            
        else:
            print(f"‚ùå Erreur HTTP {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur lors du test: {e}")
        return False

if __name__ == "__main__":
    import time
    print("‚è≥ Attente du d√©marrage de l'application...")
    time.sleep(2)
    
    # Tests
    interface_ok = test_interface_conditions()
    societes_ok = test_gestion_societes_interface()
    
    print("\n" + "="*50)
    print("üìä R√âSUM√â DES TESTS D'INTERFACE")
    print("="*50)
    print(f"üåê Interface conditions: {'‚úÖ OK' if interface_ok else '‚ùå √âCHEC'}")
    print(f"üè¢ Interface soci√©t√©s: {'‚úÖ OK' if societes_ok else '‚ùå √âCHEC'}")
    
    if interface_ok and societes_ok:
        print("\nüéâ TOUTES LES INTERFACES FONCTIONNELLES !")
        print("‚úÖ Messages des conditions g√©n√©rales affich√©s")
        print("‚úÖ Champs de dates RGE pr√©sents")
        print("‚úÖ Application pr√™te pour utilisation")
        exit(0)
    else:
        print("\n‚ùå Certaines interfaces ont des probl√®mes")
        exit(1) 